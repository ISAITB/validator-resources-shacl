# A comma-separated list of supported validation types.
validator.type = core, extended, extended_best_practices

# The SHACL files loaded for a given validation type (added as a postfix). This can be a file or folder (must never start with a '/').
validator.shaclFile.core = shapes/coreShapes.ttl
validator.shaclFile.extended = shapes/coreShapes.ttl, shapes/coreExtensionShapes.ttl, shapes/advancedFeaturesShapes.ttl
validator.shaclFile.extended_best_practices = shapes/coreShapes.ttl,shapes/coreExtensionShapes.ttl, shapes/advancedFeaturesShapes.ttl, shapes/bestPracticeShapes.ttl
# Allow externally provided resources to allow e.g. vocabularies to be provided as context.
validator.externalShapes.core = optional
validator.externalShapes.extended = optional
validator.externalShapes.extended_best_practices = optional
# The default report syntax to use if none is provided.
validator.defaultReportSyntax = text/turtle
# Disable merging of models (to avoid the configured shapes validating themselves).
validator.mergeModelsBeforeValidation = false
# Labels.

# Plugin configuration.
validator.plugins.extended.0.class = eu.europa.ec.itb.shacl.plugin.ValidationServiceAdvancedFeatureShaclPlugin
validator.plugins.extended.0.jar = plugin/shacl-shacl-1.0-SNAPSHOT-jar-with-dependencies.jar
validator.plugins.extended_best_practices.0.class = eu.europa.ec.itb.shacl.plugin.ValidationServiceBestPracticesShaclPlugin
validator.plugins.extended_best_practices.0.jar = plugin/shacl-shacl-1.0-SNAPSHOT-jar-with-dependencies.jar
# Load imports
validator.loadImports = true

validator.locale.default = en
validator.locale.available = bg,es,cs,da,de,et,el,en,fr,ga,hr,it,lv,lt,hu,mt,nl,pl,pt,ro,sk,sl,fi,sv
validator.locale.translations = translations
validator.javascriptExtension = $(document).ready(function(){$("#validatorBannerTitle").off().on("click",function(){window.location.href="upload"}),$(".toggleDetailRuleDisplayButton").on("click",function(){$("#detailedRules").is(":hidden")?($("#detailedRules").show(),$("#viewButton").hide(),$("#hideButton").show()):($("#detailedRules").hide(),$("#viewButton").hide(),$("#hideButton").show())}),$("#infoModal").on("show.bs.modal",function(){$("#detailedRules").hide()})});